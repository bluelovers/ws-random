{
  "name": "@lazy-num/parse-number-string",
  "version": "1.0.0",
  "description": "",
  "keywords": [
    "alea",
    "arr",
    "array",
    "bates",
    "d3-random",
    "distribution",
    "el",
    "element",
    "exponential",
    "fisher",
    "gaussian",
    "generate",
    "generate-random-numbers",
    "generator",
    "irwinhall",
    "item",
    "list",
    "lognormal",
    "math",
    "n-random-numbers",
    "normal",
    "number",
    "numbers",
    "pick",
    "poisson",
    "prng",
    "probability",
    "pseudorandom",
    "rand",
    "random",
    "random-extra",
    "random-sum",
    "randomSum",
    "randomize",
    "randomnumbers",
    "rng",
    "seed",
    "seedrandom",
    "select",
    "shuffle",
    "sort",
    "srand",
    "stats",
    "sum",
    "tychei",
    "uniform",
    "uuid",
    "weight",
    "weighted",
    "xor128",
    "xor4096",
    "xorshift7",
    "xorwow",
    "yates",
    "create-by-yarn-tool",
    "create-by-tsdx"
  ],
  "homepage": "https://github.com/bluelovers/ws-random/tree/master/packages/@lazy-num/parse-number-string#readme",
  "bugs": {
    "url": "https://github.com/bluelovers/ws-random/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bluelovers/ws-random.git",
    "directory": "packages/@lazy-num/parse-number-string"
  },
  "license": "ISC",
  "author": "bluelovers",
  "sideEffects": false,
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "require": "./dist/index.cjs",
      "import": "./dist/index.esm.mjs"
    },
    "./package.json": "./package.json",
    "./src/*": "./src/*"
  },
  "main": "dist/index.cjs",
  "unpkg": "dist/index.umd.production.min.cjs",
  "module": "dist/index.esm.mjs",
  "types": "dist/index.d.ts",
  "typings": "dist/index.d.ts",
  "scripts": {
    "review": "yarn run review:coverage",
    "review:coverage": "yarn run lint && yarn run coverage",
    "review:test": "yarn run lint && yarn run test",
    "coverage": "yarn run test -- --coverage",
    "lint": "yarn run lint:eslint",
    "lint:eslint": "ynpx eslint --ext .ts,.tsx,.mts,.cts ./",
    "pretest": "echo pretest",
    "test": "jest --passWithNoTests",
    "test:jest": "jest --passWithNoTests",
    "test:jest:coverage": "yarn run test:jest -- --coverage",
    "test:jest:snapshot": "yarn run test:jest -- -u",
    "test:mocha": "ynpx --quiet -p ts-node -p mocha mocha -- --require ts-node/register \"!(node_modules)/**/*.{test,spec}.{ts,tsx}\"",
    "test:snapshot": "yarn run test -- -u",
    "test:tsd": "ynpx tsd",
    "test:tsdx": "ynpx @bluelovers/tsdx test --passWithNoTests",
    "posttest": "yarn run build",
    "build": "yarn run build:tsdx && yarn run build:dts:bundle",
    "build:dts:bundle": "ynpx @bluelovers/dts-bundle-generator -o ./dist/index.d.ts ./src/index.ts --no-banner --inline-declare-global & echo build:dts:bundle",
    "build:dts:copy": "copy .\\src\\index.d.ts .\\dist\\index.d.ts & echo build:dts",
    "build:dts:tsc": "yarn run build:dts:tsc:emit && yarn run build:dts:copy",
    "build:dts:tsc:emit": "tsc --emitDeclarationOnly --declaration --noEmit false",
    "build:microbundle": "ynpx microbundle --target node",
    "build:tsdx": "ynpx @bluelovers/tsdx build --target node --name index",
    "ci:install": "echo ci:install",
    "ci:build": "echo ci:build",
    "preversion": "echo preversion && yarn run test",
    "version": "echo version",
    "postversion": "echo postversion",
    "prepublish": "echo prepublish",
    "prepare": "echo prepare",
    "prepublishOnly": "echo prepublishOnly",
    "prepack": "echo prepack",
    "pack": "echo pack",
    "postpack": "echo postpack",
    "publish": "echo publish",
    "postpublish": "echo postpublish",
    "postpublishOnly": "echo postpublishOnly",
    "sort-package-json": "yarn-tool sort",
    "tsc:default": "tsc -p tsconfig.json",
    "tsc:esm": "tsc -p tsconfig.esm.json",
    "tsc:showConfig": "ynpx get-current-tsconfig -p"
  },
  "dependencies": {},
  "devDependencies": {},
  "peerDependencies": {},
  "packageManager": "yarn@1.22.19",
  "publishConfig": {
    "access": "public"
  }
}
