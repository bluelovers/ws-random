"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("tslib"),t=require("@lazy-random/expect"),r=require("core-decorators"),n=require("@lazy-random/distributions"),i=require("@lazy-random/rng-abstract"),a=require("@lazy-random/shared-lib");function d(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=d(n);let u;exports.RandomCore=(u=Symbol.toStringTag,class RandomCore{constructor(e,...t){var r,n;n={},(r="_cache")in this?Object.defineProperty(this,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[r]=n,this._init(e,...t)}_init(e,...r){e&&t.expect(e).instanceof(i.RNG),this.use(e)}get rng(){return this._rng}get seedable(){return this._rng.seedable}get random(){return this.next}get rand(){return this.next}seed(...e){return this._rng.seed(...e),this}get srandom(){return this.srand}srand(...e){return this.seed(...e).next()}clone(e,...t){throw new Error("not implemented")}use(e,...r){return t.expect(e).instanceof(i.RNG),this._rng=e,this}newUse(e,...t){throw new Error("not implemented")}cloneUse(e,...t){throw new Error("not implemented")}patch(){if(this._patch)throw new Error("Math.random already patched");this._patch=Math.random,Math.random=this.dfUniform()}unpatch(){this._patch&&(Math.random=this._patch,delete this._patch)}next(){return this._rng.next()}float(e,t,r){return this.dfUniform(e,t,r)()}int(e=100,t){return this.dfUniformInt(e,t)()}integer(e,t){return this.int(e,t)}bool(e){return this.boolean(e)}boolean(e){return this.dfUniformBoolean(e)()}byte(e){return this.dfByte(e)()}dfByte(e){return this._memoize("byte",o.default.dfUniformByte,e)}bytes(e=1,t){return this.dfBytes(e,t)()}dfBytes(e=1,t){return this._memoize("bytes",o.default.dfUniformBytes,e,t)}randomBytes(e){return Buffer.from(this.bytes(e))}dfRandomBytes(e){let t=this.dfBytes(e);return this._memoize("dfRandomBytes",(()=>()=>Buffer.from(t())),e)}charID(e,t){return o.default.dfCharID(this,e,t)()}dfCharID(e,t){return this._memoize("dfCharID",o.default.dfCharID,e,t)}uuidv4(e){return this.dfUuidv4(e)()}dfUuidv4(e){return this._memoize("uuidv4",o.default.dfUuidV4,e)}arrayIndex(e,t=1,r=0,n){return this.dfArrayIndex(e,t,r,n)()}dfArrayIndex(e,t=1,r=0,n){return this._memoizeFake("dfArrayIndex",o.default.dfArrayIndex,e,t,r,n)}arrayItem(e,t=1,r=0,n){return this.arrayIndex(e,t,r,n).reduce((function(t,r){return t.push(e[r]),t}),[])}arrayShuffle(e,t){return this._memoizeFake("dfArrayShuffle",o.default.dfArrayShuffle,e,t)()}dfArrayShuffle(e,t){return this._callDistributions(o.default.dfArrayShuffle,e,t)}arrayUnique(e,t,r,n,i){return this.dfArrayUnique(e,t,r,n,i)()}dfArrayUnique(e,t,r,n,i){return o.default.dfArrayUnique(this,e,t,r,n,i)}arrayFill(e,t,r,n){return this.dfArrayFill(t,r,n)(e)}dfArrayFill(e,t,r){return this._memoize("dfArrayFill",o.default.dfArrayFill,e,t,r)}dfUniform(e,t,r){return this._memoize("dfUniform",o.default.dfUniformFloat,e,t,r)}dfUniformInt(e,t){return this._memoize("dfUniformInt",o.default.dfUniformInt,e,t)}dfUniformBoolean(e){return this._memoize("dfUniformBoolean",o.default.dfUniformBoolean,e)}dfNormal(e,t){return o.default.dfNormal(this,e,t)}dfLogNormal(e,t){return o.default.dfLogNormal(this,e,t)}dfBernoulli(e){return o.default.dfBernoulli(this,e)}dfBinomial(e,t){return o.default.dfBinomial(this,e,t)}dfGeometric(e){return o.default.dfGeometric(this,e)}dfPoisson(e){return o.default.dfPoisson(this,e)}dfExponential(e){return o.default.dfExponential(this,e)}dfIrwinHall(e=1){return o.default.dfIrwinHall(this,e)}dfBates(e=1){return o.default.dfBates(this,e)}dfPareto(e=1){return o.default.dfPareto(this,e)}itemByWeight(e,t,...r){return this.dfItemByWeight(e,t,...r)()}dfItemByWeight(e,t,...r){return this._callDistributions(o.default.dfItemByWeight,e,t,...r)}itemByWeightUnique(e,t,r,...n){return this.dfItemByWeightUnique(e,t,r,...n)()}dfItemByWeightUnique(e,t,r,...n){return this._callDistributions(o.default.dfItemByWeightUnique,e,t,r,...n)}sumInt(e,t,r,n,i){return this.dfSumInt(e,t,r,n,i)()}dfSumInt(e,t,r,n,i){return this._memoize("sumInt",o.default.dfRandSumInt,e,t,r,n,i)}sumFloat(e,t,r,n,i){return this.dfSumFloat(e,t,r,n,i)()}dfSumFloat(e,t,r,n,i){return this._memoize("sumFloat",o.default.dfRandSumFloat,e,t,r,n,i)}_memoize(e,t,...r){const n=a.hashArgv(r);let i=this._cache[e];return void 0!==i&&i.key===n||(i={key:n,distribution:t(this,...r)},this._cache[e]=i),i.distribution}_memoizeFake(e,t,...r){return t(this,...r)}_callDistributions(e,...t){return e(this,...t)}reset(){return this._cache={},this}get[u](){return this._rng.name}}),e.__decorate([r.deprecate("not recommended use"),e.__metadata("design:type",Function),e.__metadata("design:paramtypes",[]),e.__metadata("design:returntype",void 0)],exports.RandomCore.prototype,"patch",null),e.__decorate([r.deprecate("not recommended use"),e.__metadata("design:type",Function),e.__metadata("design:paramtypes",[]),e.__metadata("design:returntype",void 0)],exports.RandomCore.prototype,"unpatch",null),exports.RandomCore=e.__decorate([r.autobind,e.__metadata("design:paramtypes",[Object,Object])],exports.RandomCore);var s=exports.RandomCore;exports.default=s;
//# sourceMappingURL=index.cjs.production.min.cjs.map
